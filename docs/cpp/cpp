1. Заголовочные файлы, gcc
2. make
3. Библиотеки, LD
4. Отладка gdb
5. MySQL
6. Выделение памяти
7. Процессы и сигналы
8. Потоки
9. Каналы
10. Семафоры, совместная память
11. Сокеты
12. Дизассемблирование/ассемблирование
13. GTK+
14. Qt



///////////////////////////////////////////////////
///////////////1. Заголовочные файлы///////////////
///////////////////////////////////////////////////
//Чтобы использовать функцию из другого файла
//в исходный файл нужно поместить ее прототип
/* main.c */
#include <stdio.h>

int add(int a, int b);

int main(void)
{
	printf("%d\n", add(1,2));
	return 0;
}
// gcc -o test main.c add.c
// ./test


//Прототипы удобнее хранить в отдельных заголовочных файлах
//и подключать в файлы, где требуется прототип, одной строкой
/* main.c */
#include <stdio.h>
#include "add.h"

int main(void)
{
	printf("%d\n", add(1,2));
	return 0;
}
// gcc -o test main.c add.c
// ./test


//Для избежания дублирования в заголовочных файлах
//могут использоваться директивы макрозащиты препроцессора
/* add.h */
#ifndef ADD_H
#define ADD_H
 
int add(int, int);
 
#endif


///////////////////////////////////////////////////
////////////////////2. make////////////////////////
///////////////////////////////////////////////////
//Make файлы используются чтобы автоматизировать
//компиляцию сложной программы
/* Makefile */
myapp: main.o add.o
	gcc -o myapp main.o add.o

main.o: main.c
	gcc -c main.c add.h

add.o: add.c
	gcc -c add.c
	
// make
// make -f Makefile (с указанием make файла, по умолчанию makefile или Makefile)
//make -k (продолжать при ошибках)
//make -n (вывод перечня действий без их выполнения)

//Make файл состоит из целей
myapp, main.o, add.o

//завсимостей
main.o add.o

//и правил
gcc -o myapp main.o add.o

//Если удалить какой-то из файлов после сборки,
//при повторном запуске make создаст только этот файл