//Инструменты для автоматизации и тестирования
1. Selenium IDE - мини-среда для разработки и выполнения тестов в браузере
2. Selenium RC
3. Selenium WebDriver - драйвер браузера, то есть программная библиотека, которая позволяет разрабатывать программы, управляющие поведением браузера: управлять его поведением, получать от браузера какие-то данные и заставлять браузер выполнять какие-то команды.


//Комманды selenium IDE

//Простой поиск текста на странице
Command verifyTextPresent
Target "text"
Value

//Обход тайминга
//Вариант 1 - Таймаут
Command setTimeout
Target 3000
Value

//Вариант 2 - ожидание конкретного элемента
//первая ссылка в блоке с id = ires (xpath)
Command waitForElementPresent
Target xpath=(//*[@id='ires']//a)[1]
Value

//Классификация команд
verify* - выполнение продолжится после проверки даже если fail
assert* - выполнение остановится после проверки если fail
waitFor* - ожидание элементов или других условий
store* - сохранение результатов во вгнутреннюю память или переменную

//Локаторы (выподающее меню target с приоритетом сверху вниз по убыванию)
- id
- name
- css
	* - все элементы
	el - поиск по элементу
	el[attr] - поиск по аттрибуту
		el[foo="bar"] - точное соответствие
		el[foo~="bar"]
		el[foo^="bar"] - начинается с "bar"
		el[foo$="bar"] - заканчивается на "bar"
		el[foo*="bar"] - в произвольном месте
	el#id - поиск по id
	el.class - поиск по классу
	el:Not(s)
	el el
- xpath (позваляет обращаться к элементу снизу вверх)
	* - 
	el - 
	@attr - 
	//a[text()='some value'] - 
	//* - 
	descendant::* - оси
	ancestor::* - оси
	count() - функции
	contains() - функции
	text() - функции
	//div[@id='ires'] - все div с id = ires
	//div[@id='ires']/.. - родитель найденного div
	//div[@id='ires']/../.. - родитель родителя
- и т.д.

//Экспорт теста из html в код
1. Optiobs -> Options -> Enable experimental features
2. Optiobs -> Format -> Выбрать формат
Либо
1. File -> Export Test Suit As

//Запуск теста в формате jUnit в Eclipse
@TODO
