//Установка node.js и npm
sudo apt-get update
sudo apt-get install nodejs
sudo apt-get install npm

//Чтение файла
var fs = require('fs');
var cont = fs.readFileSync('file.txt');
console.log(decodeURIComponent(cont));

//Чтение файла асинхронно
var fs = require('fs');
fs.readFile('file.txt', function(err, cont){
    console.log(decodeURIComponent(cont));
});

//http сервер app.js
var http = require('http');
http.createServer(function (request, response){
    response.writeHead(200, {
        'Content-Type': 'text/html; charset=utf-8'
    });
    response.write('Hello, world');
    response.end();
}).listen(8080);
console.log('Listening on 8080...');
//node app.js

//События сервера
var http = require('http');
var server = http.createServer();
server.listen(8989);
server.on('request', function (request, response){
    response.writeHead(200);
    response.write('Hello!');
    response.end(' The end!');
});
server.on('listening', function (request, response){
    console.log('Listen: 8989...');
});
server.on('request', function (request, response){
    console.log('Request:', request.method, request.url, request.statusCode);
});
server.on('connection', function (request, response){
    console.log('Connection');
});
server.on('close', function (request, response){
    console.log('Close');
});

//Модуль URL
console.log(require('url').parse(request.url));
console.log(require('url').parse(request.url, true)); //С разбором параметров

//Пользовательские события
var events = require('events');
var EventEmitter = events.EventEmitter;
var test = new EventEmitter();
test.on('myEvent', function(param){
    console.log(param);
});
test.emit('myEvent', 'Test 1');

////////////////////РАБОТА С МОДУЛЯМИ/////////////////////////
//Встроенные модули
//Список модулей
https://nodejs.org/api/
//Исходники модулей
https://github.com/nodejs/node-v0.x-archive/tree/master/lib
//Поиск модулей
https://www.npmjs.com/
https://nodejsmodules.org/

//Поиск файлов модулей
//Если код был вызван из папки '/var/www/demo', то Node.js попытается найти указанные модули в следующих папках
/var/www/demo/node_modules
/var/www/node_modules
/var/node_modules
/node_modules

//Какие модули установлены в системе
npm ls

//При глобальной установке модуля (npm install -g MODULE) он будет доступен из любого места

//При вызове ыайла по абсолютному пути (require('../lib/logger')) если файл будет не найден logger
//Node.js попытается подключить файл добавляя разные расширения: .js, .json, .node

//Если указан каталог, Node.js попытается определить какой из файлов папки представляет собой точку входа для модуля
//Будет проверено или существует в папке файл package.json в котором в поле main будет указан файл, который надо подключить

//Удаление закешированного файла
delete require.cache['module'];

//Чтобы получить полный путь, по которому был найден модуль
var modulePath = require.resolve('express');
////////////////////END РАБОТА С МОДУЛЯМИ/////////////////////////

//Получение данных методом POST
var server = require('http').createServer().listen(8989);
server.on('request', function(req, res){

    res.writeHead(200);
    res.write('START');

    req.on('data', function(msg){
        console.log(msg.toString());
        //process.stdout.write() / console.log()
    });

    req.on('end', function(){
        res.end();
    });

});
//curl -d 'hello' http://localhost:8989

///////////////////////ПОТОКИ////////////////////////
//PIPE (Вывалит: STARThello)
var server = require('http').createServer().listen(8989);
server.on('request', function(req, res){
    res.writeHead(200);
    res.write('START');
    req.pipe(res);
});
//curl -d 'hello' http://localhost:8989

//Запись из файла в файл с помощью потока pipe
var fs = require('fs');
var fileToRead = fs.createReadStream('fileFrom.txt');
var fileToWrite = fs.createWriteStream('fileTo.txt');
fileToRead.pipe(fileToWrite);

//Загрузка файла на сервер
var fs = require('fs');
var http = require('http').createServer().listen(8989);
http.on('request', function(req, res){
    res.writeHead(200);
    var fileTo = fs.createWriteStream('fileTo.txt');
    req.pipe(fileTo);
    req.on('end', function(){
        res.end('UPLOADED!');
    });
});
//curl --upload-file fileFrom.txt http://localhost:8989

//Запись файла с помощью file.write()
var fs = require('fs');
var http = require('http').createServer().listen(8989);
http.on('request', function(req, res){
    res.writeHead(200);
    var fileTo = fs.createWriteStream('fileTo.txt');
    req.on('data', function(data){
        data = "Data from client: \n" + data;
        fileTo.write(data);
    });
    req.on('end', function(){
        res.end("UPLOADED!\n");
    });
});

//Вывод файла на экран
var fs = require('fs');
var file = fs.createReadStream('index.html');
file.on('data', function(data){
    console.log(data.toString())
});

//Вывод файла на экран с помощью pipe
var fs = require('fs');
var file = fs.createReadStream('index.html');
file.pipe(process.stdout);

//Вывод картинки в браузере
var fs = require('fs');
var http = require('http');
http.createServer(function(req, res){

    res.writeHead(200, {'Content-Type': 'image/gif'});
    var file = fs.createReadStream('logo.jpg');
    file.pipe(res);

}).listen(8989);
///////////////////////END ПОТОКИ////////////////////////

//////////////Создание своего модуля//////////////////////
//one.js
var one = function(){
    console.log('one');
}
module.exports = one;

//two.js
exports.two = function(){
    console.log('two');
}

//three.js
function Three(){
    this.test = function(){
        console.log('three');
    }
}
exports.Three = Three;

//four.js
function Four(){
    this.test = function(){
        console.log('four');
    }
}
module.exports = Four;

//five.json
{
    "f": "five"
}

//all.js
var one = require('./one');
var two = require('./two');
var three = require('./three');
var obj3 = new three.Three();
var Four = require('./four');
var obj4 = new Four();
var five = require('./five');

one(); //one \n
two.two(); //two \n
require('./two').two(); //two \n
obj3.test(); //three
obj4.test(); //four
console.log(five.f); //five

//////////////END Создание своего модуля//////////////////////

//////////////////////////HTTP CLIENT/////////////////////////////
//client.js
var http = require('http');
var request = http.request({
    host: 'localhost',
    port: '8989',
    path: '/',
    method: 'POST'
},
function(response){
    response.on('data', function(data){
        console.log(data.toString());
    });
});
request.write('Hello, world!');
request.end();

//server.js
var http = require('http');
http.createServer(function(request, response){
    response.writeHead(200);
    request.on('data', function(data){
        console.log('Request: ',  data.toString());
        response.write('Write: ' + data.toString());
    });
    request.on('end', function(){
        console.log('The end');
    });
}).listen(8989);
//////////////////////////END HTTP CLIENT/////////////////////////////

/////////////////////////СОЗДАНИЕ NPM МОДУЛЯ/////////////////////////
//1. Создание package.json вручную
{
    "name": "Module-Name",
    "description": "описание модуля",
    "version": "1.2.3",
    "main": "main.js",
    "dependencies": {}
}

//2. Либо автоматом в папке модуля
npm init

//Публикация
npm adduser
npm publish
//npm unpublish

//Инсталляция и использование
npm install moduleName
npm update [moduleName]
npm remove moduleName

//Глобальная инстелляция
npm install moduleName -g

/////////////////////////END СОЗДАНИЕ NPM МОДУЛЯ/////////////////////

///////////////////////////EXPRESS/////////////////////////////

//Установка express
npm install express

//Первое приложение (app.js)
var express = require('express');
var app = express();
app.listen(8989);

app.get('/', function(request, response){
    response.sendfile(__dirname + '/test.html');
});

app.get('/user/:name', function(request, response){
    response.write(request.params.name);
    response.end();
});
///////////////////////////END EXPRESS/////////////////////////////

//////////////////ШАБЛОН EJS///////////////////////

//Установка embedded js
npm install ejs

//user.ejs
<!-- Строка -->
<h3>Пользователь <%= name %> </h3>

<!-- Цикл -->
<ul>
<% users.forEach(function(name)){ %>
    <li>User name: <% name %> </li>
<% }); %>
</ul>
//end user.ejs

//app.js
var express = require('express');
var app = express();
app.listen(8989);

app.set('views', __dirname);
app.set('view engine', 'ejs');

//localhost:8989/John
app.get('/:name', function(request, response){
    response.render('user', {name: request.params.name});
    response.end();
});
//////////////////END ШАБЛОН EJS///////////////////////

////////////////////HTTP CLIENT REQUEST/////////////////
//Модуль request
npm install request

//Создание http-клиента
var request = require('request');

request(url, function(err, res, body){

});

//С использование модуля url
var url = require('url');
var options = {
    protocol: 'http',
    pathname: '/',
    query: {user: 'name'}
};
var needUrl = url.format(options)
request(url, function(err, res, body){

});
////////////////////END HTTP CLIENT REQUEST/////////////
